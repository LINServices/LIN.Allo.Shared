@inject IJSRuntime JsRuntime
@inject DeviceOnAccountModel Device

<!-- drawer component -->
<div id="@_id" class="fixed bottom-0 left-0 right-0 z-50 flex w-full translate-y-full items-center justify-center overflow-y-auto backdrop-blur-sm transition-transform" tabindex="-1" aria-labelledby="drawer-bottom-label">

    <div class="mx-3 w-full rounded-t-xl bg-zinc-800/90 p-4 backdrop-blur-md transition-transform lg:max-w-lg">

        <div class="mt-5 flex max-h-[70dvh] min-h-[70dvh] flex-col px-3">

            @* Header. *@
            <div class="mt-5 flex w-full flex-col items-center justify-center">
                <svg class="h-8 w-8 fill-current-500" xmlns="http://www.w3.org/2000/svg" id="Layer_1" data-name="Layer 1" viewBox="0 0 24 24" width="512" height="512"><path d="M24,2V6a1,1,0,0,1-2,0V3.439L16.7,8.71A1,1,0,1,1,15.3,7.292L20.61,2H18a1,1,0,0,1,0-2h4A2,2,0,0,1,24,2ZM20.655,14.856a3.1,3.1,0,0,0-4.28.006l-1.906,1.606A12.781,12.781,0,0,1,7.537,9.524l1.6-1.9a3.1,3.1,0,0,0,.006-4.28S7.291.939,7.261.907A3.085,3.085,0,0,0,2.933.861l-1.149,1c-7.72,8.209,12.2,28.138,20.4,20.3l.912-1.049a3.1,3.1,0,0,0,0-4.378C23.063,16.708,20.655,14.856,20.655,14.856Z" /></svg>
                <label class="mt-2 text-xl font-bold text-white">Continuar llamada en</label>
            </div>

            @* Componentes. *@
            <div id="close-all-all" class="UIScroll mt-2 h-full flex-1 gap-3 overflow-y-auto p-0.5">
                @if (DevicesList == null || DevicesList.Response == Responses.IsLoading)
                {
                    <div class="mt-3 flex w-full items-center justify-center rounded-lg border-2 border-dashed border-zinc-300 py-7 dark:border-gray-400">
                        <CircleLoader></CircleLoader>
                    </div>
                }
                else if (DevicesList.Response != Responses.Success)
                {
                    <div class="mt-3 flex w-full items-center justify-center rounded-lg border-2 border-dashed border-zinc-300 py-10 dark:border-gray-400">
                        <label class="text-zinc-400 dark:text-gray-200">Hubo un error</label>
                    </div>
                }
                else if (DevicesList.Models.Count() <= 0)
                {
                    <div class="mt-3 flex w-full items-center justify-center rounded-lg border-2 border-dashed border-zinc-300 py-10 dark:border-gray-400">
                        <label class="text-zinc-400 dark:text-gray-200">Sin dispositivos</label>
                    </div>
                }
                else
                {
                    @foreach (var e in DevicesList.Models)
                    {
                        <DeviceControl Model="e" OnClick="OnInvoke" />
                    }
                }
            </div>

            @* Obtener dispositivos. *@
            <div class="mb-2 mt-2 flex w-full items-end justify-center gap-2 self-end">
                <button @onclick="GetDevices" type="button" class="w-full rounded-lg bg-current-500 px-3 py-2 text-center text-sm font-medium text-white hover:bg-current-600 focus:outline-none focus:ring-4 focus:ring-current-300 dark:bg-current-600 dark:hover:bg-current-700 dark:focus:ring-current-800">Actualizar</button>
                <button id="btn-close-@_id" type="button" class="w-full rounded-lg bg-current-500 px-3 py-2 text-center text-sm font-medium text-white hover:bg-current-600 focus:outline-none focus:ring-4 focus:ring-current-300 dark:bg-current-600 dark:hover:bg-current-700 dark:focus:ring-current-800">Aceptar</button>
            </div>

        </div>
    </div>
</div>